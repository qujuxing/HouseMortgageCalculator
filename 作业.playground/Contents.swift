//: 用面向过程的技能，实现一个房贷计算器。


//: 假设小波贷款买了一套房，房贷总价 150万元，利率4.9%，分期30年，首付3成。 求按等额本金还款方式下，每个月利息列表 和 购买此套房的总花费。

/*
 首付 = 总价*0.3
 贷款额 = 总价*0.7
 月利率 = 年利率/12
 月本金 = 贷款额/(30*12)
 monthlyInterest1 = 贷款额 * 月利率
 monthlyInterest2 = (贷款额 - 月本金) * 月利率
 monthlyInterest3 = (贷款额 - 月本金*2) * 月利率
 monthlyInterest4 = (贷款额 - 月本金*3) * 月利率
 ...
 monthlyInterest(30*12) = (贷款额 - 月本金*(30*12-1)) * 月利率
 总花费 = 总价 + 总利息
 
 let 月数组 = Array(1...(30*12))
 var 月利息 = []
 func 月利息公式() {
 for n in 月数组 {
 var 每月利息 = (贷款额 - 月本金*(月数组[n]-1)) * 月利率
 月利息.append(每月利息)
 }
 return 月利息
 }
 月利息公式
 let 总利息 = 月利息。reduce(0) { $0 + $1 }
 购买此套房的总花费 = 房屋总价 + 总利息
 */
let  房屋总价 : Double = 1500000
let 贷款额 = 房屋总价 * 0.7
let rate = 0.049
let 月利率 = rate/12
let 月本金 = 贷款额/(30*12)
var 月数组 = [Double]()
for i in 1...360 {
    let m = Double(i)
    月数组.append(m)
}

var 月利息 = [Double]()

var n = 0
for i in 0...359 {
    let 每月利息 = (贷款额 - 月本金*(月数组[i]-1)) * 月利率
    月利息.append(每月利息)
    print((i+1),"月利息",月利息[i])
}

let 总利息 = 月利息.reduce(0.0) {
    $0 + $1
}

let 购买此套房的总花费 = 房屋总价 + 总利息

